--BOOKS
CREATE TABLE BOOKS(
    ID NUMBER,
    STOCK_ID NUMBER NOT NULL,
    CONDITION NUMBER NOT NULL,
    CONSTRAINT BOOKS_PK PRIMARY KEY (ID)
);

--POSITIONS
CREATE TABLE POSITIONS(
    ID NUMBER,
    JOB_TITLE VARCHAR2(40) NOT NULL,
    CONSTRAINT POSITIONS_PK PRIMARY KEY (ID)
);

--EMPLOYEES
CREATE TABLE EMPLOYEES(
    ID NUMBER,
    NAME VARCHAR2(40) NOT NULL,
    SURNAME VARCHAR2(40) NOT NULL,
    POSITION_ID NUMBER NOT NULL,
    CONSTRAINT EMPLOYEES_PK PRIMARY KEY (ID),
    CONSTRAINT EMPLOYEES_FK FOREIGN KEY (POSITION_ID) REFERENCES POSITIONS(ID)
);

--READERS
CREATE TABLE READERS(
    LIBRARY_CARD NUMBER,
    NAME VARCHAR2(40) NOT NULL,
    SURNAME VARCHAR2(40) NOT NULL,
    BIRTHD_DATE DATE NOT NULL,
    RATING NUMBER NOT NULL,
    SEX NUMBER(1) NOT NULL,
    BLACK_LIST NUMBER NOT NULL,
    MONEY NUMBER NOT NULL,
    CONSTRAINT READERS_PK PRIMARY KEY (LIBRARY_CARD)
);

--JOURNAL
CREATE TABLE JOURNAL(
    ID NUMBER,
    RECIVE_DATE DATE NOT NULL,
    RETURN_DATE DATE,
    LIBRARY_CARD_ID NUMBER NOT NULL,
    BOOK_ID NUMBER NOT NULL,
    BOOK_RATING NUMBER,
    WHERE_READS VARCHAR2(40),
    EMPLOYEES_ID NUMBER NOT NULL,
    CONSTRAINT JOURNAL_PK PRIMARY KEY (ID),
    CONSTRAINT JOURNAL_EMPLOYEES_ID_FK FOREIGN KEY (EMPLOYEES_ID) REFERENCES EMPLOYEES(ID),
    CONSTRAINT JOURNAL_BOOK_ID_FK FOREIGN KEY (BOOK_ID) REFERENCES BOOKS(ID),
    CONSTRAINT JOURNAL_LIBRARY_CARD_ID_FK FOREIGN KEY (LIBRARY_CARD_ID) REFERENCES READERS(LIBRARY_CARD)
);

--AGE_LIMITS
CREATE TABLE AGE_LIMITS(
    ID NUMBER,
    AGE NUMBER NOT NULL,
    CONSTRAINT AGE_LIMITS_PK PRIMARY KEY (ID)
);

--TYPES
CREATE TABLE TYPES(
    ID NUMBER,
    PUBLICATION_TYPE VARCHAR2(40) NOT NULL,
    CONSTRAINT TYPES_PK PRIMARY KEY (ID)
);

--PUBLISHERS
CREATE TABLE PUBLISHERS(
    ID NUMBER,
    PUBLISHER_NAME VARCHAR2(100) NOT NULL,
    CONSTRAINT PUBLISHERS_PK PRIMARY KEY (ID)
);

CREATE TABLE STOCK(
    ID NUMBER,
    BOOK_NAME VARCHAR2(400) NOT NULL,
    AMOUNT NUMBER NOT NULL,
    PUBLICATION_YEAR NUMBER NOT NULL,
    COST NUMBER(8, 2) NOT NULL,
    PUBLISHER_ID NUMBER,
    TYPE_ID NUMBER NOT NULL,
    AGE_LIMIT_ID NUMBER NOT NULL,
    DESCRIPTION VARCHAR2(4000),
    PURCHASE_TYPE VARCHAR2(400),
    CONSTRAINT STOCK_PK PRIMARY KEY (ID),
    CONSTRAINT STOCK_PUBLISHER_ID_FK FOREIGN KEY (PUBLISHER_ID) REFERENCES PUBLISHERS(ID),
    CONSTRAINT STOCK_TYPE_ID_FK FOREIGN KEY (TYPE_ID) REFERENCES TYPES(ID),
    CONSTRAINT STOCK_AGE_LIMIT_ID_FK FOREIGN KEY (AGE_LIMIT_ID) REFERENCES AGE_LIMITS(ID)
);

--TAGS
CREATE TABLE TAGS(
    ID NUMBER,
    TAG_NAME VARCHAR2(100) NOT NULL,
    CONSTRAINT TAGS_PK PRIMARY KEY (ID)
);

--GENRES
CREATE TABLE GENRES(
    ID NUMBER,
    GENER_NAME VARCHAR2(40) NOT NULL,
    CONSTRAINT GENRES_PK PRIMARY KEY (ID)
);

--AUTHORS
CREATE TABLE AUTHORS(
    ID NUMBER,
    NAME VARCHAR2(40) NOT NULL,
    SURNAME VARCHAR2(40) NOT NULL,
    CONSTRAINT AUTHORS_PK PRIMARY KEY (ID)
);

-- CHANGELOG
CREATE TABLE CHANGELOG(
    ID NUMBER,
    RECORDING_DATE DATE NOT NULL,
    LIBRARY_CARD_ID NUMBER NOT NULL,
    CHANGE VARCHAR2(40) NOT NULL,
    EMPLOYEE_ID NUMBER NOT NULL,
    CONSTRAINT CHANGELOG_PK PRIMARY KEY (ID),
    CONSTRAINT CHANGELOG_LIBRARY_CARD_ID_FK FOREIGN KEY (LIBRARY_CARD_ID) REFERENCES READERS(LIBRARY_CARD),
    CONSTRAINT CHANGELOG_EMPLOYEE_ID_FK FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES(ID)
);

--TAG_STOCK
CREATE TABLE TAG_STOCK(
    ID NUMBER,
    TAG_ID NUMBER NOT NULL,
    STOCK_ID NUMBER NOT NULL,
    CONSTRAINT TAG_STOCK_PK PRIMARY KEY (ID),
    CONSTRAINT TAG_STOCK_TAG_ID_FK FOREIGN KEY (TAG_ID) REFERENCES TAGS(ID),
    CONSTRAINT TAG_STOCK_STOCK_ID_FK FOREIGN KEY (STOCK_ID) REFERENCES STOCK(ID)
);

--GENRE_STOCK
CREATE TABLE GENRE_STOCK(
    ID NUMBER,
    GENRE_ID NUMBER NOT NULL,
    STOCK_ID NUMBER NOT NULL,
    CONSTRAINT GENRE_STOCK_PK PRIMARY KEY (ID),
    CONSTRAINT GENRE_STOCK_STOCK_ID_FK FOREIGN KEY (STOCK_ID) REFERENCES STOCK(ID),
    CONSTRAINT GENRE_STOCK_GENRE_ID_FK FOREIGN KEY (GENRE_ID) REFERENCES GENRES(ID)
);

--AUTHOR_STOCK
CREATE TABLE AUTHOR_STOCK(
    ID NUMBER,
    AUTHOR_ID NUMBER NOT NULL,
    STOCK_ID NUMBER NOT NULL,
    CONSTRAINT AUTHOR_STOCK_PK PRIMARY KEY (ID),
    CONSTRAINT AUTHOR_STOCK_AUTHOR_ID_FK FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHORS(ID),
    CONSTRAINT AUTHOR_STOCK_STOCK_ID_FK FOREIGN KEY (STOCK_ID) REFERENCES STOCK(ID)
);