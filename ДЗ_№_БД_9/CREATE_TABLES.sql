--BOOKS
CREATE TABLE BOOKS(
    ID NUMBER,
    STOCK_ID NUMBER NOT NULL,
    CONDITION NUMBER NOT NULL,
    CONSTRAINT BOOKS_PK PRIMARY KEY (ID)
);

COMMENT ON TABLE BOOKS IS 'Список уникальных печатных материалов';
COMMENT ON COLUMN BOOKS.ID IS 'Идентификационный номер печатнго материала';
COMMENT ON COLUMN BOOKS.STOCK_ID IS 'Номер партии печатнго материала';
COMMENT ON COLUMN BOOKS.CONDITION IS 'Состояние печатнго материала';


--POSITIONS
CREATE TABLE POSITIONS(
    ID NUMBER,
    JOB_TITLE VARCHAR2(40) NOT NULL,
    CONSTRAINT POSITIONS_PK PRIMARY KEY (ID)
);

COMMENT ON TABLE POSITIONS IS 'Список должностей сотрудников';
COMMENT ON COLUMN POSITIONS.ID IS 'Идентификационный номер должности';
COMMENT ON COLUMN POSITIONS.JOB_TITLE IS 'Наименование должности';


--EMPLOYEES
CREATE TABLE EMPLOYEES(
    ID NUMBER,
    NAME VARCHAR2(40) NOT NULL,
    SURNAME VARCHAR2(40) NOT NULL,
    POSITION_ID NUMBER NOT NULL,
    CONSTRAINT EMPLOYEES_PK PRIMARY KEY (ID),
    CONSTRAINT EMPLOYEES_FK FOREIGN KEY (POSITION_ID) REFERENCES POSITIONS(ID)
);

COMMENT ON TABLE EMPLOYEES IS 'Список сотрудников';
COMMENT ON COLUMN EMPLOYEES.ID IS 'Идентификационный номер сотрудника';
COMMENT ON COLUMN EMPLOYEES.NAME IS 'Имя сотрудника';
COMMENT ON COLUMN EMPLOYEES.SURNAME IS 'Фамилия сотрудника';
COMMENT ON COLUMN EMPLOYEES.POSITION_ID IS 'Идентификационный номер должности сотрудника';


--READERS
CREATE TABLE READERS(
    LIBRARY_CARD NUMBER,
    NAME VARCHAR2(30) NOT NULL,
    SURNAME VARCHAR2(30) NOT NULL,
    BIRTHD_DATE DATE NOT NULL,
    RATING NUMBER NOT NULL,
    SEX NUMBER(1) NOT NULL,
    BLACK_LIST NUMBER NOT NULL,
    MONEY NUMBER NOT NULL,
    REGISTRATION_DATE TIMESTAMP,
    CONSTRAINT READERS_PK PRIMARY KEY (LIBRARY_CARD)
);

COMMENT ON TABLE READERS IS 'Список читателей';
COMMENT ON COLUMN READERS.LIBRARY_CARD IS 'Номер читательского билета';
COMMENT ON COLUMN READERS.NAME IS 'Имя читателя';
COMMENT ON COLUMN READERS.SURNAME IS 'Фамилия читателя';
COMMENT ON COLUMN READERS.BIRTHD_DATE IS 'Дата рождения читателя';
COMMENT ON COLUMN READERS.RATING IS 'Рейтинг читателя';
COMMENT ON COLUMN READERS.SEX IS 'Пол читателя';
COMMENT ON COLUMN READERS.BLACK_LIST IS 'Отметка о внесении в ЧС';
COMMENT ON COLUMN READERS.MONEY IS 'Баланс читателя';
COMMENT ON COLUMN READERS.REGISTRATION_DATE IS 'Дата регистрации читателя';


--JOURNAL
CREATE TABLE JOURNAL(
    ID NUMBER,
    RECIVE_DATE TIMESTAMP NOT NULL,
    RETURN_DATE TIMESTAMP,
    LIBRARY_CARD_ID NUMBER NOT NULL,
    BOOK_ID NUMBER NOT NULL,
    BOOK_RATING NUMBER,
    WHERE_READS NUMBER,
    EMPLOYEES_ID NUMBER NOT NULL,
    CONSTRAINT JOURNAL_PK PRIMARY KEY (ID),
    CONSTRAINT JOURNAL_EMPLOYEES_ID_FK FOREIGN KEY (EMPLOYEES_ID) REFERENCES EMPLOYEES(ID),
    CONSTRAINT JOURNAL_BOOK_ID_FK FOREIGN KEY (BOOK_ID) REFERENCES BOOKS(ID),
    CONSTRAINT JOURNAL_LIBRARY_CARD_ID_FK FOREIGN KEY (LIBRARY_CARD_ID) REFERENCES READERS(LIBRARY_CARD)
);

COMMENT ON TABLE JOURNAL IS 'Журнал';
COMMENT ON COLUMN JOURNAL.ID IS 'Идентификационный номер записи';
COMMENT ON COLUMN JOURNAL.RECIVE_DATE IS 'Дата получения книги';
COMMENT ON COLUMN JOURNAL.RETURN_DATE IS 'Дата возврата книги';
COMMENT ON COLUMN JOURNAL.LIBRARY_CARD_ID IS 'Номер читательского билета';
COMMENT ON COLUMN JOURNAL.BOOK_ID IS 'Идентификационный номер печатнго материала';
COMMENT ON COLUMN JOURNAL.WHERE_READS IS 'Читал книгу в зале/Забрал книгу домой';
COMMENT ON COLUMN JOURNAL.EMPLOYEES_ID IS 'Идентификационный номер сотрудника';


--AGE_LIMITS
CREATE TABLE AGE_LIMITS(
    ID NUMBER,
    AGE NUMBER NOT NULL,
    CONSTRAINT AGE_LIMITS_PK PRIMARY KEY (ID)
);

COMMENT ON TABLE AGE_LIMITS IS 'Возрастные ограничения печатного материала';
COMMENT ON COLUMN AGE_LIMITS.ID IS 'Идентификационный номер возрастного ограничения';
COMMENT ON COLUMN AGE_LIMITS.AGE IS 'Возрастное ограничение';


--TYPES
CREATE TABLE TYPES(
    ID NUMBER,
    PUBLICATION_TYPE VARCHAR2(40) NOT NULL,
    CONSTRAINT TYPES_PK PRIMARY KEY (ID)
);

COMMENT ON TABLE TYPES IS 'Типы печатного материала';
COMMENT ON COLUMN TYPES.ID IS 'Идентификационный номер типа печатного материала';
COMMENT ON COLUMN TYPES.ID IS 'Тип печатного материала';


--PUBLISHERS
CREATE TABLE PUBLISHERS(
    ID NUMBER,
    PUBLISHER_NAME VARCHAR2(100) NOT NULL,
    CONSTRAINT PUBLISHERS_PK PRIMARY KEY (ID)
);

COMMENT ON TABLE PUBLISHERS IS 'Издатели';
COMMENT ON COLUMN PUBLISHERS.ID IS 'Идентификационный номер издательства';
COMMENT ON COLUMN PUBLISHERS.PUBLISHER_NAME IS 'Название издательства';


CREATE TABLE STOCK(
    ID NUMBER,
    BOOK_NAME VARCHAR2(100) NOT NULL,
    AMOUNT NUMBER NOT NULL,
    PUBLICATION_YEAR NUMBER NOT NULL,
    COST NUMBER NOT NULL,
    PUBLISHER_ID NUMBER,
    TYPE_ID NUMBER NOT NULL,
    AGE_LIMIT_ID NUMBER NOT NULL,
    DESCRIPTION VARCHAR2(4000),
    PURCHASE_TYPE VARCHAR2(100),
    RECEIPT_DATE TIMESTAMP,
    CONSTRAINT STOCK_PK PRIMARY KEY (ID),
    CONSTRAINT STOCK_PUBLISHER_ID_FK FOREIGN KEY (PUBLISHER_ID) REFERENCES PUBLISHERS(ID),
    CONSTRAINT STOCK_TYPE_ID_FK FOREIGN KEY (TYPE_ID) REFERENCES TYPES(ID),
    CONSTRAINT STOCK_AGE_LIMIT_ID_FK FOREIGN KEY (AGE_LIMIT_ID) REFERENCES AGE_LIMITS(ID)
);

COMMENT ON TABLE STOCK IS 'Книжный склад';
COMMENT ON COLUMN STOCK.ID IS 'Идентификационный номер партии книг';
COMMENT ON COLUMN STOCK.BOOK_NAME IS 'Название печатного материала';
COMMENT ON COLUMN STOCK.AMOUNT IS 'Количество печатного материала в партии';
COMMENT ON COLUMN STOCK.PUBLICATION_YEAR IS 'Год публикации печатного материала';
COMMENT ON COLUMN STOCK.COST IS 'Стоимость одного печатного материала из партии';
COMMENT ON COLUMN STOCK.PUBLISHER_ID IS 'Идентификационный номер издательства';
COMMENT ON COLUMN STOCK.TYPE_ID IS 'Идентификационный номер типа печатного материала';
COMMENT ON COLUMN STOCK.AGE_LIMIT_ID IS 'Идентификационный номер возрастного ограничения';
COMMENT ON COLUMN STOCK.DESCRIPTION IS 'Описание печатного материала';
COMMENT ON COLUMN STOCK.PURCHASE_TYPE IS 'Печатный материал был куплен / принят в дар';
COMMENT ON COLUMN STOCK.RECEIPT_DATE IS 'Дата поступления партии книг на склад';

CREATE INDEX B_NAME ON STOCK (
    BOOK_NAME
);

--TAGS
CREATE TABLE TAGS(
    ID NUMBER,
    TAG_NAME VARCHAR2(100) NOT NULL,
    CONSTRAINT TAGS_PK PRIMARY KEY (ID)
);

COMMENT ON TABLE TAGS IS 'Теги печатного материала';
COMMENT ON COLUMN TAGS.ID IS 'Идентификационный номер тега';
COMMENT ON COLUMN TAGS.TAG_NAME IS 'Название тега';


--GENRES
CREATE TABLE GENRES(
    ID NUMBER,
    GENER_NAME VARCHAR2(40) NOT NULL,
    CONSTRAINT GENRES_PK PRIMARY KEY (ID)
);

COMMENT ON TABLE GENRES IS 'Жанр печатного материала';
COMMENT ON COLUMN GENRES.ID IS 'Идентификационный номер жанра';
COMMENT ON COLUMN GENRES.GENER_NAME IS 'Название жанра';


--AUTHORS
CREATE TABLE AUTHORS(
    ID NUMBER,
    NAME VARCHAR2(40) NOT NULL,
    SURNAME VARCHAR2(40) NOT NULL,
    CONSTRAINT AUTHORS_PK PRIMARY KEY (ID)
);

COMMENT ON TABLE AUTHORS IS 'Авторы';
COMMENT ON COLUMN AUTHORS.ID IS 'Идентификационный номер автора';
COMMENT ON COLUMN AUTHORS.NAME IS 'Имя автора';
COMMENT ON COLUMN AUTHORS.SURNAME IS 'Фамилия автора';


--TAG_STOCK
CREATE TABLE TAG_STOCK(
    ID NUMBER,
    TAG_ID NUMBER NOT NULL,
    STOCK_ID NUMBER NOT NULL,
    CONSTRAINT TAG_STOCK_PK PRIMARY KEY (ID),
    CONSTRAINT TAG_STOCK_TAG_ID_FK FOREIGN KEY (TAG_ID) REFERENCES TAGS(ID),
    CONSTRAINT TAG_STOCK_STOCK_ID_FK FOREIGN KEY (STOCK_ID) REFERENCES STOCK(ID)
);

COMMENT ON TABLE TAG_STOCK IS 'Таблица связующая тег и партию печатного материала';
COMMENT ON COLUMN TAG_STOCK.ID IS 'Идентификационный номер связи';
COMMENT ON COLUMN TAG_STOCK.TAG_ID IS 'Идентификационный номер тега';
COMMENT ON COLUMN TAG_STOCK.STOCK_ID IS 'Идентификационный номер партии печатного материала';

--GENRE_STOCK
CREATE TABLE GENRE_STOCK(
    ID NUMBER,
    GENRE_ID NUMBER NOT NULL,
    STOCK_ID NUMBER NOT NULL,
    CONSTRAINT GENRE_STOCK_PK PRIMARY KEY (ID),
    CONSTRAINT GENRE_STOCK_STOCK_ID_FK FOREIGN KEY (STOCK_ID) REFERENCES STOCK(ID),
    CONSTRAINT GENRE_STOCK_GENRE_ID_FK FOREIGN KEY (GENRE_ID) REFERENCES GENRES(ID)
);

COMMENT ON TABLE GENRE_STOCK IS 'Таблица связующая жанр и партию печатного материала';
COMMENT ON COLUMN GENRE_STOCK.ID IS 'Идентификационный номер связи';
COMMENT ON COLUMN GENRE_STOCK.GENRE_ID IS 'Идентификационный номер жанра';
COMMENT ON COLUMN GENRE_STOCK.STOCK_ID IS 'Идентификационный номер партии печатного материала';

--AUTHOR_STOCK
CREATE TABLE AUTHOR_STOCK(
    ID NUMBER,
    AUTHOR_ID NUMBER NOT NULL,
    STOCK_ID NUMBER NOT NULL,
    CONSTRAINT AUTHOR_STOCK_PK PRIMARY KEY (ID),
    CONSTRAINT AUTHOR_STOCK_AUTHOR_ID_FK FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHORS(ID),
    CONSTRAINT AUTHOR_STOCK_STOCK_ID_FK FOREIGN KEY (STOCK_ID) REFERENCES STOCK(ID)
);

COMMENT ON TABLE AUTHOR_STOCK IS 'Таблица связующая автора и партию печатного материала';
COMMENT ON COLUMN AUTHOR_STOCK.ID IS 'Идентификационный номер связи';
COMMENT ON COLUMN AUTHOR_STOCK.AUTHOR_ID IS 'Идентификационный номер автора';
COMMENT ON COLUMN AUTHOR_STOCK.STOCK_ID IS 'Идентификационный номер партии печатного материала';

CREATE SEQUENCE CHANGELOG_SEQ MINVALUE 1 START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

CREATE SEQUENCE READERS_SEQ MINVALUE 1 START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

CREATE SEQUENCE JOURNAL_SEQ MINVALUE 1 START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

CREATE SEQUENCE BOOKS_SEQ MINVALUE 1 START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

CREATE SEQUENCE AUTHOR_STOCK_SEQ MINVALUE 1 START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

CREATE SEQUENCE EMPLOYEES_SEQ MINVALUE 1 START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

CREATE SEQUENCE POSITIONS_SEQ MINVALUE 1 START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

CREATE SEQUENCE AUTHORS_SEQ MINVALUE 1 START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

CREATE SEQUENCE TAG_STOCK_SEQ MINVALUE 1 START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

CREATE SEQUENCE GENRE_STOCK_SEQ MINVALUE 1 START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

CREATE SEQUENCE STOCK_SEQ MINVALUE 1 START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

CREATE SEQUENCE AGE_LIMITS_SEQ MINVALUE 1 START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

CREATE SEQUENCE TYPES_SEQ MINVALUE 1 START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

CREATE SEQUENCE PUBLISHERS_SEQ MINVALUE 1 START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

CREATE SEQUENCE TAGS_SEQ MINVALUE 1 START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

CREATE SEQUENCE GENRES_SEQ MINVALUE 1 START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;